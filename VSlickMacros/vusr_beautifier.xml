<profiles>
	<profile name="bird's Style" lang="c">
		<P N="syntax_indent" V="4" E="1"/>
		<P N="tab_indent" V="8" E="1"/>
		<P N="indent_policy" V="12" E="1"/>
		<P N="indent_member_access" V="0" E="1"/>
		<P N="access_spec_indent" V="1" E="1"/>
		<P N="member_access_relative_indent" V="0" E="1"/>
		<P N="indent_case" V="1" E="1"/>
		<P N="case_indent_width" V="4" E="1"/>
		<P N="continuation_width" V="4" E="1"/>
		<P N="funcall_param_align" V="10" E="1"/>
		<P N="sp_tmpldecl_comma" V="2" E="1"/>
		<P N="sp_init_comma" V="2" E="1"/>
		<P N="sp_member_dotstar" V="0" E="1"/>
		<P N="sp_mptr_ccs" V="5" E="1"/>
		<P N="sp_delete_padbracket" V="5" E="1"/>
		<P N="sp_cppcast_pad" V="5" E="1"/>
		<P N="st_nl_file" V="4" E="1"/>
		<P N="sp_class_lbrace" V="1" E="1"/>
		<P N="st_nl_empty" V="5" E="1"/>
		<P N="sp_catch_padparen" V="5" E="1"/>
		<P N="sp_switch_lparen" V="4" E="1"/>
		<P N="sp_ref_arp" V="5" E="1"/>
		<P N="sp_member_arrowstar" V="0" E="1"/>
		<P N="sp_tmpldecl_equals" V="3" E="1"/>
		<P N="sp_arrayexpr_lbracket" V="5" E="1"/>
		<P N="sp_tmpldecl_pad" V="5" E="1"/>
		<P N="sp_tmplparm_pad" V="5" E="1"/>
		<P N="sp_arraydecl_lbracket" V="5" E="1"/>
		<P N="st_fundecl_nameline" V="5" E="0"/>
		<P N="st_oneline_dowhile" V="4" E="1"/>
		<P N="sp_op_bitwise" V="3" E="1"/>
		<P N="st_oneline_catch" V="5" E="1"/>
		<P N="sp_ctlstmt_rparen" V="5" E="1"/>
		<P N="sp_ctlstmt_padparen" V="5" E="1"/>
		<P N="st_newline_after_extern" V="4" E="1"/>
		<P N="sp_for_lparen" V="4" E="1"/>
		<P N="sp_funcall_voidparen" V="5" E="1"/>
		<P N="sp_switch_defcolon" V="0" E="1"/>
		<P N="sp_switch_padparen" V="5" E="1"/>
		<P N="sp_class_colon" V="3" E="1"/>
		<P N="sp_fun_padparen" V="5" E="1"/>
		<P N="sp_if_rparen" V="4" E="1"/>
		<P N="sp_struct_comma" V="2" E="1"/>
		<P N="sp_ptr_is" V="4" E="1"/>
		<P N="sp_fun_equals" V="3" E="1"/>
		<P N="sp_delete_rbracket" V="4" E="1"/>
		<P N="sp_op_bitand" V="3" E="1"/>
		<P N="sp_op_assignment" V="3" E="1"/>
		<P N="sp_ref_av" V="5" E="1"/>
		<P N="sp_new_lparen" V="5" E="1"/>
		<P N="sp_struct_colon" V="3" E="1"/>
		<P N="sp_ptr_srp" V="5" E="1"/>
		<P N="sp_for_comma" V="2" E="1"/>
		<P N="sp_funcall_comma" V="2" E="1"/>
		<P N="sp_class_comma" V="2" E="1"/>
		<P N="sp_funcall_operator" V="0" E="1"/>
		<P N="st_oneline_access" V="4" E="1"/>
		<P N="sp_arrayexpr_rbracket" V="5" E="1"/>
		<P N="sp_cppcast_gt" V="5" E="1"/>
		<P N="sp_op_mult" V="3" E="1"/>
		<P N="sp_fun_commainit" V="2" E="1"/>
		<P N="sp_tmpldecl_lt" V="5" E="1"/>
		<P N="sp_arraydecl_rbracket" V="5" E="1"/>
		<P N="sp_for_lbrace" V="1" E="0"/>
		<P N="sp_init_lbrace" V="2" E="1"/>
		<P N="st_oneline_then" V="5" E="1"/>
		<P N="sp_catch_lparen" V="4" E="1"/>
		<P N="sp_fun_operator" V="0" E="1"/>
		<P N="sp_ptr_ss" V="5" E="1"/>
		<P N="sp_member_dot" V="0" E="1"/>
		<P N="sp_tmplcall_pad" V="5" E="1"/>
		<P N="sp_enum_lbrace" V="1" E="1"/>
		<P N="sp_ptr_sv" V="5" E="1"/>
		<P N="sp_for_rparen" V="4" E="1"/>
		<P N="sp_while_rparen" V="4" E="1"/>
		<P N="sp_ret_parexpr" V="4" E="1"/>
		<P N="sp_throw_parexpr" V="4" E="1"/>
		<P N="st_nl_class" V="5" E="0"/>
		<P N="st_oneline_statement" V="5" E="1"/>
		<P N="sp_union_lbrace" V="1" E="1"/>
		<P N="st_oneline_elsif" V="4" E="1"/>
		<P N="sp_op_unary" V="0" E="1"/>
		<P N="sp_op_binary" V="3" E="1"/>
		<P N="sp_new_rparen" V="4" E="1"/>
		<P N="sp_new_padparen" V="5" E="1"/>
		<P N="sp_cast_lparen" V="5" E="1"/>
		<P N="sp_op_comparison" V="3" E="1"/>
		<P N="sp_catch_rparen" V="4" E="1"/>
		<P N="sp_fun_lparen" V="5" E="1"/>
		<P N="sp_fun_voidparen" V="5" E="1"/>
		<P N="sp_enum_comma" V="2" E="1"/>
		<P N="sp_enum_equals" V="3" E="1"/>
		<P N="sp_cppcast_lt" V="5" E="1"/>
		<P N="sp_while_lbrace" V="1" E="1"/>
		<P N="sp_switch_lbrace" V="1" E="1"/>
		<P N="sp_op_logical" V="3" E="1"/>
		<P N="sp_for_semicolon" V="2" E="1"/>
		<P N="st_nl_fn" V="4" E="0"/>
		<P N="sp_cast_padparen" V="5" E="1"/>
		<P N="sp_funcall_rparen" V="5" E="1"/>
		<P N="sp_funcall_lparen" V="5" E="1"/>
		<P N="sp_switch_colon" V="0" E="1"/>
		<P N="sp_enum_colon" V="3" E="1"/>
		<P N="sp_ptr_slp" V="5" E="1"/>
		<P N="sp_ptr_sa" V="5" E="1"/>
		<P N="sp_ref_ia" V="4" E="1"/>
		<P N="sp_tmplcall_comma" V="2" E="1"/>
		<P N="sp_fun_comma" V="2" E="1"/>
		<P N="sp_tmplparm_comma" V="2" E="1"/>
		<P N="st_leave_declmult" V="4" E="1"/>
		<P N="sp_tmplcall_lt" V="5" E="1"/>
		<P N="sp_catch_lbrace" V="1" E="1"/>
		<P N="sp_fun_lbrace" V="3" E="1"/>
		<P N="sp_if_lbrace" V="1" E="1"/>
		<P N="sp_ptr_si" V="4" E="1"/>
		<P N="sp_ctlstmt_lparen" V="4" E="1"/>
		<P N="sp_for_padparen" V="5" E="1"/>
		<P N="sp_cast_rparen" V="5" E="1"/>
		<P N="sp_switch_rparen" V="4" E="1"/>
		<P N="sp_fun_colon" V="3" E="1"/>
		<P N="sp_delete_lbracket" V="5" E="1"/>
		<P N="sp_tmplparm_lt" V="5" E="1"/>
		<P N="sp_pp_eatspace" V="4" E="0"/>
		<P N="sp_op_dereference" V="0" E="1"/>
		<P N="sp_struct_lbrace" V="1" E="1"/>
		<P N="sp_member_arrow" V="0" E="1"/>
		<P N="sp_op_prefix" V="0" E="1"/>
		<P N="sp_fptr_si" V="4" E="1"/>
		<P N="sp_funcall_padparen" V="5" E="1"/>
		<P N="sp_while_padparen" V="5" E="1"/>
		<P N="sp_while_lparen" V="4" E="1"/>
		<P N="sp_fun_rparen" V="5" E="1"/>
		<P N="sp_ref_alp" V="5" E="1"/>
		<P N="st_leave_stmtmult" V="4" E="1"/>
		<P N="sp_arrayexpr_padbracket" V="5" E="1"/>
		<P N="sp_arraydecl_padbracket" V="5" E="1"/>
		<P N="sp_ctlstmt_lbrace" V="3" E="1"/>
		<P N="st_oneline_else" V="5" E="1"/>
		<P N="st_nl_case" V="4" E="0"/>
		<P N="sp_init_rbrace" V="1" E="1"/>
		<P N="sp_op_addressof" V="0" E="1"/>
		<P N="sp_op_postfix" V="0" E="1"/>
		<P N="sp_if_lparen" V="4" E="1"/>
		<P N="sp_if_padparen" V="5" E="1"/>
		<P N="original_tab" V="4" E="1"/>
		<P N="indent_use_tab" V="1" E="1"/>
		<P N="indent_tab_custom" V="0" E="1"/>
		<P N="indent_first_level" V="1" E="1"/>
		<P N="indent_goto" V="0" E="1"/>
		<P N="indent_extern" V="0" E="1"/>
		<P N="indent_namespace" V="0" E="1"/>
		<P N="align_on_equals" V="1" E="1"/>
		<P N="exp_paren_align" V="8" E="1"/>
		<P N="indent_preprocessing" V="0" E="1"/>
		<P N="indent_in_block" V="0" E="1"/>
		<P N="indent_guard" V="0" E="1"/>
		<P N="indent_pp_col1" V="0" E="1"/>
		<P N="brace_loc_if" V="13" E="1"/>
		<P N="brace_loc_for" V="13" E="1"/>
		<P N="brace_loc_while" V="13" E="1"/>
		<P N="brace_loc_switch" V="13" E="1"/>
		<P N="brace_loc_do" V="13" E="1"/>
		<P N="brace_loc_try" V="13" E="1"/>
		<P N="brace_loc_catch" V="13" E="1"/>
		<P N="brace_loc_asm" V="13" E="1"/>
		<P N="brace_loc_namespace" V="13" E="1"/>
		<P N="brace_loc_class" V="13" E="1"/>
		<P N="brace_loc_enum" V="13" E="1"/>
		<P N="brace_loc_fun" V="13" E="1"/>
		<P N="rm_trailing_ws" V="4" E="1"/>
		<P N="rm_dup_ws" V="5" E="1"/>
		<P N="respace_other" V="4" E="1"/>
		<P N="comment_indent" V="4" E="1"/>
		<P N="comment_col1_indent" V="5" E="1"/>
		<P N="parens_return" V="18" E="1"/>
		<P N="parens_throw" V="5" E="0"/>
		<P N="fundecl_void" V="5" E="0"/>
		<P N="fun_assoc_with_ret_type" V="4" E="1"/>
		<P N="cppb_sp_fptr_padparen" V="5" E="1"/>
		<P N="cppb_sp_fptr_lparen" V="4" E="1"/>
		<P N="cppb_sp_fptr_rparen" V="5" E="1"/>
		<P N="allow_one_line_block" V="4" E="1"/>
		<P N="allow_class_one_line_block" V="4" E="1"/>
		<P N="st_newline_before_else" V="4" E="1"/>
		<P N="cont_indent_returntype" V="0" E="1"/>
		<P N="trailing_comment_align" V="2" E="1"/>
		<P N="trailing_comment_value" V="70" E="1"/>
		<P N="indent_from_brace" V="0" E="1"/>
		<P N="label_indent" V="1" E="1"/>
		<P N="sp_ty_star_prototype" V="4" E="1"/>
		<P N="sp_ty_amp_prototype" V="4" E="1"/>
		<P N="sp_return_padparen" V="5" E="1"/>
		<P N="sp_return_rparen" V="5" E="1"/>
		<P N="sp_throw_padparen" V="5" E="1"/>
		<P N="sp_throw_rparen" V="5" E="1"/>
		<P N="sp_expr_lparen" V="5" E="1"/>
		<P N="sp_expr_padparen" V="5" E="1"/>
		<P N="sp_expr_rparen" V="5" E="1"/>
		<P N="sp_disassoc_ret_type_ref" V="4" E="1"/>
		<P N="sp_stmt_semicolon" V="4" E="1"/>
		<P N="sp_namespace_lbrace" V="3" E="1"/>
		<P N="sp_try_lbrace" V="3" E="1"/>
		<P N="brace_follows_case" V="1" E="1"/>
		<P N="pp_indent_with_code" V="0" E="1"/>
	</profile>
	<profile name="bird's Objective-C Style" lang="m">
		<P N="syntax_indent" V="4" E="1"/>
		<P N="tab_indent" V="8" E="1"/>
		<P N="indent_policy" V="12" E="1"/>
		<P N="indent_member_access" V="0" E="1"/>
		<P N="access_spec_indent" V="1" E="1"/>
		<P N="member_access_relative_indent" V="0" E="1"/>
		<P N="indent_case" V="1" E="1"/>
		<P N="case_indent_width" V="4" E="1"/>
		<P N="continuation_width" V="4" E="1"/>
		<P N="funcall_param_align" V="10" E="1"/>
		<P N="sp_tmpldecl_comma" V="2" E="1"/>
		<P N="sp_init_comma" V="2" E="1"/>
		<P N="sp_member_dotstar" V="0" E="1"/>
		<P N="sp_mptr_ccs" V="5" E="1"/>
		<P N="sp_delete_padbracket" V="5" E="1"/>
		<P N="sp_cppcast_pad" V="5" E="1"/>
		<P N="st_nl_file" V="4" E="1"/>
		<P N="sp_class_lbrace" V="1" E="1"/>
		<P N="st_nl_empty" V="5" E="1"/>
		<P N="sp_catch_padparen" V="5" E="1"/>
		<P N="sp_switch_lparen" V="4" E="1"/>
		<P N="sp_ref_arp" V="5" E="1"/>
		<P N="sp_member_arrowstar" V="0" E="1"/>
		<P N="sp_tmpldecl_equals" V="3" E="1"/>
		<P N="sp_arrayexpr_lbracket" V="5" E="1"/>
		<P N="sp_tmpldecl_pad" V="5" E="1"/>
		<P N="sp_tmplparm_pad" V="5" E="1"/>
		<P N="sp_arraydecl_lbracket" V="5" E="1"/>
		<P N="st_fundecl_nameline" V="5" E="0"/>
		<P N="st_oneline_dowhile" V="4" E="1"/>
		<P N="sp_op_bitwise" V="3" E="1"/>
		<P N="st_oneline_catch" V="5" E="1"/>
		<P N="sp_ctlstmt_rparen" V="5" E="1"/>
		<P N="sp_ctlstmt_padparen" V="5" E="1"/>
		<P N="st_newline_after_extern" V="4" E="1"/>
		<P N="sp_for_lparen" V="4" E="1"/>
		<P N="sp_funcall_voidparen" V="5" E="1"/>
		<P N="sp_switch_defcolon" V="0" E="1"/>
		<P N="sp_switch_padparen" V="5" E="1"/>
		<P N="sp_class_colon" V="3" E="1"/>
		<P N="sp_fun_padparen" V="5" E="1"/>
		<P N="sp_if_rparen" V="4" E="1"/>
		<P N="sp_struct_comma" V="2" E="1"/>
		<P N="sp_ptr_is" V="4" E="1"/>
		<P N="sp_fun_equals" V="3" E="1"/>
		<P N="sp_delete_rbracket" V="4" E="1"/>
		<P N="sp_op_bitand" V="3" E="1"/>
		<P N="sp_op_assignment" V="3" E="1"/>
		<P N="sp_ref_av" V="5" E="1"/>
		<P N="sp_new_lparen" V="5" E="1"/>
		<P N="sp_struct_colon" V="3" E="1"/>
		<P N="sp_ptr_srp" V="5" E="1"/>
		<P N="sp_for_comma" V="2" E="1"/>
		<P N="sp_funcall_comma" V="2" E="1"/>
		<P N="sp_class_comma" V="2" E="1"/>
		<P N="sp_funcall_operator" V="0" E="1"/>
		<P N="st_oneline_access" V="4" E="1"/>
		<P N="sp_arrayexpr_rbracket" V="5" E="1"/>
		<P N="sp_cppcast_gt" V="5" E="1"/>
		<P N="sp_op_mult" V="3" E="1"/>
		<P N="sp_fun_commainit" V="2" E="1"/>
		<P N="sp_tmpldecl_lt" V="5" E="1"/>
		<P N="sp_arraydecl_rbracket" V="5" E="1"/>
		<P N="sp_for_lbrace" V="1" E="0"/>
		<P N="sp_init_lbrace" V="2" E="1"/>
		<P N="st_oneline_then" V="5" E="1"/>
		<P N="sp_catch_lparen" V="4" E="1"/>
		<P N="sp_fun_operator" V="0" E="1"/>
		<P N="sp_ptr_ss" V="5" E="1"/>
		<P N="sp_member_dot" V="0" E="1"/>
		<P N="sp_tmplcall_pad" V="5" E="1"/>
		<P N="sp_enum_lbrace" V="1" E="1"/>
		<P N="sp_ptr_sv" V="5" E="1"/>
		<P N="sp_for_rparen" V="4" E="1"/>
		<P N="sp_while_rparen" V="4" E="1"/>
		<P N="sp_ret_parexpr" V="4" E="1"/>
		<P N="sp_throw_parexpr" V="4" E="1"/>
		<P N="st_nl_class" V="5" E="0"/>
		<P N="st_oneline_statement" V="5" E="1"/>
		<P N="sp_union_lbrace" V="1" E="1"/>
		<P N="st_oneline_elsif" V="4" E="1"/>
		<P N="sp_op_unary" V="0" E="1"/>
		<P N="sp_op_binary" V="3" E="1"/>
		<P N="sp_new_rparen" V="4" E="1"/>
		<P N="sp_new_padparen" V="5" E="1"/>
		<P N="sp_cast_lparen" V="5" E="1"/>
		<P N="sp_op_comparison" V="3" E="1"/>
		<P N="sp_catch_rparen" V="4" E="1"/>
		<P N="sp_fun_lparen" V="5" E="1"/>
		<P N="sp_fun_voidparen" V="5" E="1"/>
		<P N="sp_enum_comma" V="2" E="1"/>
		<P N="sp_enum_equals" V="3" E="1"/>
		<P N="sp_cppcast_lt" V="5" E="1"/>
		<P N="sp_while_lbrace" V="1" E="1"/>
		<P N="sp_switch_lbrace" V="1" E="1"/>
		<P N="sp_op_logical" V="3" E="1"/>
		<P N="sp_for_semicolon" V="2" E="1"/>
		<P N="st_nl_fn" V="4" E="0"/>
		<P N="sp_cast_padparen" V="5" E="1"/>
		<P N="sp_funcall_rparen" V="5" E="1"/>
		<P N="sp_funcall_lparen" V="5" E="1"/>
		<P N="sp_switch_colon" V="0" E="1"/>
		<P N="sp_enum_colon" V="3" E="1"/>
		<P N="sp_ptr_slp" V="5" E="1"/>
		<P N="sp_ptr_sa" V="5" E="1"/>
		<P N="sp_ref_ia" V="4" E="1"/>
		<P N="sp_tmplcall_comma" V="2" E="1"/>
		<P N="sp_fun_comma" V="2" E="1"/>
		<P N="sp_tmplparm_comma" V="2" E="1"/>
		<P N="st_leave_declmult" V="4" E="1"/>
		<P N="sp_tmplcall_lt" V="5" E="1"/>
		<P N="sp_catch_lbrace" V="1" E="1"/>
		<P N="sp_fun_lbrace" V="3" E="1"/>
		<P N="sp_if_lbrace" V="1" E="1"/>
		<P N="sp_ptr_si" V="4" E="1"/>
		<P N="sp_ctlstmt_lparen" V="4" E="1"/>
		<P N="sp_for_padparen" V="5" E="1"/>
		<P N="sp_cast_rparen" V="5" E="1"/>
		<P N="sp_switch_rparen" V="4" E="1"/>
		<P N="sp_fun_colon" V="3" E="1"/>
		<P N="sp_delete_lbracket" V="5" E="1"/>
		<P N="sp_tmplparm_lt" V="5" E="1"/>
		<P N="sp_pp_eatspace" V="4" E="0"/>
		<P N="sp_op_dereference" V="0" E="1"/>
		<P N="sp_struct_lbrace" V="1" E="1"/>
		<P N="sp_member_arrow" V="0" E="1"/>
		<P N="sp_op_prefix" V="0" E="1"/>
		<P N="sp_fptr_si" V="4" E="1"/>
		<P N="sp_funcall_padparen" V="5" E="1"/>
		<P N="sp_while_padparen" V="5" E="1"/>
		<P N="sp_while_lparen" V="4" E="1"/>
		<P N="sp_fun_rparen" V="5" E="1"/>
		<P N="sp_ref_alp" V="5" E="1"/>
		<P N="st_leave_stmtmult" V="4" E="1"/>
		<P N="sp_arrayexpr_padbracket" V="5" E="1"/>
		<P N="sp_arraydecl_padbracket" V="5" E="1"/>
		<P N="sp_ctlstmt_lbrace" V="3" E="1"/>
		<P N="st_oneline_else" V="5" E="1"/>
		<P N="st_nl_case" V="4" E="0"/>
		<P N="sp_init_rbrace" V="1" E="1"/>
		<P N="sp_op_addressof" V="0" E="1"/>
		<P N="sp_op_postfix" V="0" E="1"/>
		<P N="sp_if_lparen" V="4" E="1"/>
		<P N="sp_if_padparen" V="5" E="1"/>
		<P N="original_tab" V="4" E="1"/>
		<P N="indent_use_tab" V="1" E="1"/>
		<P N="indent_tab_custom" V="0" E="1"/>
		<P N="indent_first_level" V="1" E="1"/>
		<P N="indent_goto" V="0" E="1"/>
		<P N="indent_extern" V="0" E="1"/>
		<P N="indent_namespace" V="0" E="1"/>
		<P N="align_on_equals" V="1" E="1"/>
		<P N="exp_paren_align" V="8" E="1"/>
		<P N="indent_preprocessing" V="0" E="1"/>
		<P N="indent_in_block" V="0" E="1"/>
		<P N="indent_guard" V="0" E="1"/>
		<P N="indent_pp_col1" V="0" E="1"/>
		<P N="brace_loc_if" V="13" E="1"/>
		<P N="brace_loc_for" V="13" E="1"/>
		<P N="brace_loc_while" V="13" E="1"/>
		<P N="brace_loc_switch" V="13" E="1"/>
		<P N="brace_loc_do" V="13" E="1"/>
		<P N="brace_loc_try" V="13" E="1"/>
		<P N="brace_loc_catch" V="13" E="1"/>
		<P N="brace_loc_asm" V="13" E="1"/>
		<P N="brace_loc_namespace" V="13" E="1"/>
		<P N="brace_loc_class" V="13" E="1"/>
		<P N="brace_loc_enum" V="13" E="1"/>
		<P N="brace_loc_fun" V="13" E="1"/>
		<P N="rm_trailing_ws" V="4" E="1"/>
		<P N="rm_dup_ws" V="5" E="1"/>
		<P N="respace_other" V="4" E="1"/>
		<P N="comment_indent" V="4" E="1"/>
		<P N="comment_col1_indent" V="5" E="1"/>
		<P N="parens_return" V="18" E="1"/>
		<P N="parens_throw" V="5" E="0"/>
		<P N="fundecl_void" V="5" E="0"/>
		<P N="fun_assoc_with_ret_type" V="4" E="1"/>
		<P N="cppb_sp_fptr_padparen" V="5" E="1"/>
		<P N="cppb_sp_fptr_lparen" V="4" E="1"/>
		<P N="cppb_sp_fptr_rparen" V="5" E="1"/>
		<P N="allow_one_line_block" V="4" E="1"/>
		<P N="allow_class_one_line_block" V="4" E="1"/>
		<P N="st_newline_before_else" V="4" E="1"/>
		<P N="cont_indent_returntype" V="0" E="1"/>
		<P N="trailing_comment_align" V="2" E="1"/>
		<P N="trailing_comment_value" V="70" E="1"/>
		<P N="indent_from_brace" V="0" E="1"/>
		<P N="label_indent" V="1" E="1"/>
		<P N="sp_ty_star_prototype" V="4" E="1"/>
		<P N="sp_ty_amp_prototype" V="4" E="1"/>
		<P N="sp_return_padparen" V="5" E="1"/>
		<P N="sp_return_rparen" V="5" E="1"/>
		<P N="sp_throw_padparen" V="5" E="1"/>
		<P N="sp_throw_rparen" V="5" E="1"/>
		<P N="sp_expr_lparen" V="5" E="1"/>
		<P N="sp_expr_padparen" V="5" E="1"/>
		<P N="sp_expr_rparen" V="5" E="1"/>
		<P N="sp_disassoc_ret_type_ref" V="4" E="1"/>
		<P N="sp_stmt_semicolon" V="4" E="1"/>
		<P N="sp_namespace_lbrace" V="3" E="1"/>
		<P N="sp_try_lbrace" V="3" E="1"/>
		<P N="brace_follows_case" V="1" E="1"/>
		<P N="pp_indent_with_code" V="0" E="1"/>
		<P N="meth_decl_align" V="19" E="1"/>
		<P N="meth_call_align" V="19" E="1"/>
		<P N="category_padparen" V="5" E="1"/>
		<P N="category_lparen" V="4" E="1"/>
		<P N="category_rparen" V="4" E="1"/>
		<P N="sp_decl_selector_colon" V="2" E="1"/>
		<P N="sp_call_selector_colon" V="2" E="1"/>
		<P N="protocol_padparen" V="5" E="1"/>
		<P N="protocol_lparen" V="4" E="1"/>
		<P N="protocol_rparen" V="4" E="1"/>
		<P N="protocol_comma" V="2" E="1"/>
		<P N="meth_call_bracket_align" V="8" E="1"/>
		<P N="meth_call_selalign_force" V="1" E="1"/>
		<P N="prop_padparen" V="5" E="1"/>
		<P N="prop_lparen" V="4" E="1"/>
		<P N="prop_rparen" V="4" E="1"/>
		<P N="prop_comma" V="2" E="1"/>
		<P N="synth_comma" V="2" E="1"/>
		<P N="synth_eq" V="0" E="1"/>
		<P N="dynamic_comma" V="2" E="1"/>
		<P N="meth_return_lparen" V="4" E="1"/>
		<P N="meth_return_padparen" V="5" E="1"/>
		<P N="meth_return_rparen" V="5" E="1"/>
		<P N="meth_param_lparen" V="5" E="1"/>
		<P N="meth_param_padparen" V="5" E="1"/>
		<P N="meth_param_rparen" V="5" E="1"/>
		<P N="block_initial_indent" V="4" E="1"/>
		<P N="finally_lbrace" V="3" E="1"/>
		<P N="synchronized_lparen" V="5" E="1"/>
		<P N="synchronized_padparen" V="5" E="1"/>
		<P N="synchronized_rparen" V="5" E="1"/>
		<P N="synchronized_lbrace" V="3" E="1"/>
		<P N="prop_eq" V="0" E="1"/>
	</profile>
</profiles>
