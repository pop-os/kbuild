From: Michel Normand <normand@linux.vnet.ibm.com>
Subject: kBuild 0.1.9998 ppc64le
Date: Mon, 18 May 2015 08:46:41 -0400

kBuild 0.1.9998 ppc64le
patch retrieved from opensuse url below and refresh to match fedora source tree.
but seems never uploaded upstream.
https://build.opensuse.org/package/view_file/devel:tools:building/kbuild/ppc64le.patch?expand=1

Debian NOTE:
 we call it ppc64el, not ppc64le, so tweaking the patch accordingly (even if it should be a cosmetic issue)
 http://linux.debian.ports.powerpc.narkive.com/8eeWSBtZ/switching-ppc64el-port-name-to-ppc64le
 

Index: kbuild/kBuild/env.sh
===================================================================
--- kbuild.orig/kBuild/env.sh	2014-12-05 15:57:43.546393368 +0530
+++ kbuild/kBuild/env.sh	2014-12-05 15:57:43.546393368 +0530
@@ -351,6 +351,9 @@
         ppc64|powerpc64)
             KBUILD_HOST_ARCH='ppc64'
             ;;
+        ppc64le|powerpc64le)
+            KBUILD_HOST_ARCH='ppc64el'
+            ;;
         mips32|mips)
             KBUILD_HOST_ARCH='mips32'
             ;;
Index: kbuild/kBuild/header.kmk
===================================================================
--- kbuild.orig/kBuild/header.kmk	2014-12-05 15:57:43.546393368 +0530
+++ kbuild/kBuild/header.kmk	2014-12-05 15:57:43.546393368 +0530
@@ -189,8 +189,8 @@
 # build types. (PORTME)
 #
 KBUILD_OSES      := darwin dos dragonfly freebsd gnukfreebsd haiku l4 linux netbsd nt openbsd os2 solaris win os-agnostic
-KBUILD_ARCHES    := x86 amd64 sparc32 sparc64 s390 s390x ppc32 ppc64 mips32 mips64 ia64 hppa32 hppa64 arm alpha sh noarch
-KBUILD_ARCHES_64 := amd64 sparc64 s390x ppc64 mips64 ia64 hppa64 alpha
+KBUILD_ARCHES    := x86 amd64 sparc32 sparc64 s390 s390x ppc32 ppc64 ppc64el mips32 mips64 ia64 hppa32 hppa64 arm alpha sh noarch
+KBUILD_ARCHES_64 := amd64 sparc64 s390x ppc64 ppc64el mips64 ia64 hppa64 alpha
 KBUILD_ARCHES_32 := x86 sparc32 s390 ppc32 mips32 hppa32 arm sh
 
 
@@ -481,7 +481,7 @@ endif
 KBUILD_DEVTOOLS_TRG ?= $(KBUILD_DEVTOOLS)/$(KBUILD_TARGET).$(KBUILD_TARGET_ARCH)
 KBUILD_DEVTOOLS_HST ?= $(KBUILD_DEVTOOLS)/$(KBUILD_HOST).$(KBUILD_HOST_ARCH)
 
-if1of ($(KBUILD_TARGET_ARCH), amd64 hppa64 mips64 ppc64 s390x sparc64)
+if1of ($(KBUILD_TARGET_ARCH), amd64 hppa64 mips64 ppc64 ppc64el s390x sparc64)
  ifeq ($(KBUILD_TARGET_ARCH),amd64)
   KBUILD_DEVTOOLS_TRG_ALT ?= $(KBUILD_DEVTOOLS)/$(KBUILD_TARGET).x86
  else ifeq ($(KBUILD_TARGET_ARCH),hppa64)
diff --git a/src/lib/k/kDefs.h b/src/lib/k/kDefs.h
index b67886f..47d8c58 100644
--- a/src/lib/kStuff/include/k/kDefs.h
+++ b/src/lib/kStuff/include/k/kDefs.h
@@ -162,18 +164,20 @@
 #define K_ARCH_POWERPC_32       (13 | K_ARCH_BIT_32 | K_ARCH_END_BI)
 /** 64-bit PowerPC. */
 #define K_ARCH_POWERPC_64       (14 | K_ARCH_BIT_64 | K_ARCH_END_BI)
+/** 64-bit PowerPC. */
+#define K_ARCH_POWERPC_64EL     (15 | K_ARCH_BIT_64 | K_ARCH_END_LITTLE)
 /** 32(31)-bit S390. */
-#define K_ARCH_S390_32          (15 | K_ARCH_BIT_32 | K_ARCH_END_BIG)
+#define K_ARCH_S390_32          (16 | K_ARCH_BIT_32 | K_ARCH_END_BIG)
 /** 64-bit S390. */
-#define K_ARCH_S390_64          (16 | K_ARCH_BIT_64 | K_ARCH_END_BIG)
+#define K_ARCH_S390_64          (17 | K_ARCH_BIT_64 | K_ARCH_END_BIG)
 /** 32-bit SPARC. */
-#define K_ARCH_SPARC_32         (17 | K_ARCH_BIT_32 | K_ARCH_END_BIG)
+#define K_ARCH_SPARC_32         (18 | K_ARCH_BIT_32 | K_ARCH_END_BIG)
 /** 64-bit SPARC. */
-#define K_ARCH_SPARC_64         (18 | K_ARCH_BIT_64 | K_ARCH_END_BI)
+#define K_ARCH_SPARC_64         (19 | K_ARCH_BIT_64 | K_ARCH_END_BI)
 /** 32-bit SuperH. */
-#define K_ARCH_SH_32            (19 | K_ARCH_BIT_32 | K_ARCH_END_BI)
+#define K_ARCH_SH_32            (20 | K_ARCH_BIT_32 | K_ARCH_END_BI)
 /** The end of the valid architecture values (exclusive). */
-#define K_ARCH_MAX              (20)
+#define K_ARCH_MAX              (21)
 /** @} */
 
 
@@ -200,8 +202,10 @@
 #  define K_ARCH    K_ARCH_MIPS_64
 # elif defined(__mips__)
 #  define K_ARCH    K_ARCH_MIPS_32
-# elif defined(__powerpc64__) || defined(__ppc64__) || defined(__PPC64__)
+# elif (defined(__powerpc64__) && defined(__BIG_ENDIAN__))|| defined(__ppc64__) || defined(__PPC64__)
 #  define K_ARCH    K_ARCH_POWERPC_64
+# elif (defined(__powerpc64__) && defined(__LITTLE_ENDIAN__))
+#  define K_ARCH    K_ARCH_POWERPC_64EL
 # elif defined(__powerpc__) || defined(__ppc__) || defined(__PPC__)
 #  define K_ARCH    K_ARCH_POWERPC_32
 # elif defined(__sparcv9__) || defined(__sparcv9)
